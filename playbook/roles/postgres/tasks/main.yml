---

#- name: Install PostgreSQL
#  apt: name={{ item }} update_cache={{ update_apt_cache }} state=installed
#  with_items:
#    - postgresql
#    - postgresql-contrib
##    - postgresql-server
#    - python-psycopg2
#  tags: packages
- name: Ensure common packages are installed
  apt: pkg={{ item }} state=installed update_cache=yes cache_valid_time=3600
  with_items:
    - python-pycurl
  sudo: true
  tags: postgres_common


- name: Include Debian tasks
  include: debian.yml
  when: ansible_os_family == "Debian"
  tags: postgres_debian

- name: Ensure packages are installed
  apt: pkg={{ item }}
  with_items:
    - postgresql-{{ pg_version }}
    - postgresql-client-{{ pg_version }}
    - python-psycopg2
  register: db_setup
#  environment: pg_proxy_env
  sudo: true
  tags: postgres_packages

- name: Ensure the PostgreSQL service is running
  service: name=postgresql state=started enabled=yes

- name: Ensure database is created
  sudo_user: postgres
  postgresql_db: name={{ db_name }}
                 encoding='UTF-8'
                 lc_collate='en_US.UTF-8'
                 lc_ctype='en_US.UTF-8'
                 template='template0'
                 state=present

- name: Ensure user has access to the database
  sudo_user: postgres
  postgresql_user: db={{ db_name }}
                   name={{ db_user }}
                   password={{ db_password }}
                   priv=ALL
                   state=present

- include: test_settings.yml

- name: Ensure user does not have unnecessary privileges
  sudo_user: postgres
  postgresql_user: name={{ db_user }}
                   role_attr_flags=NOSUPERUSER,NOCREATEDB
                   state=present

- name: Ensure PostgreSQL is listening on all localhost
  lineinfile: dest=/etc/postgresql/{{pg_version }}/main/postgresql.conf
    regexp='^#?listen_addresses\s*='
    line="listen_addresses = '*'"
    state=present
  notify: restart postgresql


- name: Update pg_hba.conf file
  template: src=pg_hba.conf.j2 dest=/etc/postgresql/{{ pg_version }}/{{ pg_cluster }}/pg_hba.conf owner={{ pg_admin_user }} group={{ pg_admin_user }} mode=0640
  notify: restart postgresql
  sudo: true
  tags: postgres_config

- include: firewall.yml
