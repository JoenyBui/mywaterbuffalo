# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-29 03:22
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django_mysql.models
import taggit.managers


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('taggit', '0002_auto_20150616_2121'),
        ('topic', '0002_topic_key'),
        ('editor', '0004_editor_pen_name'),
    ]

    operations = [
        migrations.CreateModel(
            name='AnswerInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemBase',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('status', models.IntegerField(choices=[(0, b'Created'), (1, b'Draft'), (2, b'Submitted'), (3, b'Reviewed'), (4, b'Published'), (5, b'Revised'), (6, b'Lock')], default=0)),
                ('domain', models.IntegerField(choices=[(0, b'Unknown'), (1000, b'Mathematic'), (1001, b'Addition'), (1002, b'Subtraction'), (1003, b'Multiplication'), (1004, b'Division'), (1005, b'Fraction'), (2000, b'Reading'), (2001, b'Spelling'), (2002, b'Vocabulary')], default=0)),
                ('created', models.DateTimeField(auto_now_add=True)),
                ('modified', models.DateTimeField(auto_now_add=True)),
                ('editors', models.ManyToManyField(to='editor.Editor')),
                ('tags', taggit.managers.TaggableManager(help_text='A comma-separated list of tags.', through='taggit.TaggedItem', to='taggit.Tag', verbose_name='Tags')),
                ('topics', models.ManyToManyField(default=None, to='topic.Topic')),
            ],
        ),
        migrations.CreateModel(
            name='ProblemInstance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('data', django_mysql.models.JSONField(default=dict)),
                ('root', models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='problem.ProblemBase')),
            ],
        ),
        migrations.CreateModel(
            name='AnswerFillInTheBlank',
            fields=[
                ('answerinstance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='problem.AnswerInstance')),
                ('data', models.CharField(default=b'', max_length=150)),
            ],
            bases=('problem.answerinstance',),
        ),
        migrations.CreateModel(
            name='AnswerMultipleChoice',
            fields=[
                ('answerinstance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='problem.AnswerInstance')),
                ('data', models.IntegerField(default=-1)),
            ],
            bases=('problem.answerinstance',),
        ),
        migrations.CreateModel(
            name='AnswerShortAnswer',
            fields=[
                ('answerinstance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='problem.AnswerInstance')),
                ('data', models.CharField(default=b'', max_length=400)),
            ],
            bases=('problem.answerinstance',),
        ),
        migrations.CreateModel(
            name='AnswerTrueOrFalse',
            fields=[
                ('answerinstance_ptr', models.OneToOneField(auto_created=True, on_delete=django.db.models.deletion.CASCADE, parent_link=True, primary_key=True, serialize=False, to='problem.AnswerInstance')),
                ('data', models.BooleanField(default=None)),
            ],
            bases=('problem.answerinstance',),
        ),
        migrations.AddField(
            model_name='answerinstance',
            name='problem',
            field=models.ForeignKey(default=None, on_delete=django.db.models.deletion.CASCADE, to='problem.ProblemInstance'),
        ),
    ]
